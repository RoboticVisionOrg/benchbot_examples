diff -ur darknet/Makefile darknet_patched/Makefile
--- darknet/Makefile	2019-01-24 10:58:19.224852814 +1000
+++ darknet_patched/Makefile	2019-01-24 11:04:43.422474206 +1000
@@ -1,7 +1,8 @@
-GPU=0
-CUDNN=0
-OPENCV=0
+GPU=1
+CUDNN=1
+OPENCV=1
 OPENMP=0
+NUMPY=1
 DEBUG=0
 
 ARCH= -gencode arch=compute_30,code=sm_30 \
@@ -58,6 +59,16 @@
 LDFLAGS+= -lcudnn
 endif
 
+ifeq ($(NUMPY), 1) 
+COMMON+= -DNUMPY -I/usr/include/python2.7/ -I/usr/lib/python2.7/dist-packages/numpy/core/include/numpy/
+CFLAGS+= -DNUMPY
+endif
+
+ifeq ($(NUMPY), 1) 
+COMMON+= -DNUMPY -I/usr/include/python2.7/ -I/usr/lib/python2.7/dist-packages/numpy/core/include/numpy/
+CFLAGS+= -DNUMPY
+endif
+
 OBJ=gemm.o utils.o cuda.o deconvolutional_layer.o convolutional_layer.o list.o image.o activations.o im2col.o col2im.o blas.o crop_layer.o dropout_layer.o maxpool_layer.o softmax_layer.o data.o matrix.o network.o connected_layer.o cost_layer.o parser.o option_list.o detection_layer.o route_layer.o upsample_layer.o box.o normalization_layer.o avgpool_layer.o layer.o local_layer.o shortcut_layer.o logistic_layer.o activation_layer.o rnn_layer.o gru_layer.o crnn_layer.o demo.o batchnorm_layer.o region_layer.o reorg_layer.o tree.o  lstm_layer.o l2norm_layer.o yolo_layer.o iseg_layer.o image_opencv.o
 EXECOBJA=captcha.o lsd.o super.o art.o tag.o cifar.o go.o rnn.o segmenter.o regressor.o classifier.o coco.o yolo.o detector.o nightmare.o instance-segmenter.o darknet.o
 ifeq ($(GPU), 1) 
diff -ur darknet/src/image.c darknet_patched/src/image.c
--- darknet/src/image.c	2019-01-24 10:58:19.248852414 +1000
+++ darknet_patched/src/image.c	2019-01-24 11:04:50.866350574 +1000
@@ -1464,3 +1464,35 @@
         free(m.data);
     }
 }
+
+#ifdef NUMPY
+image ndarray_to_image(unsigned char* src, long* shape, long* strides)
+{
+    int h = shape[0];
+    int w = shape[1];
+    int c = shape[2];
+    int step_h = strides[0];
+    int step_w = strides[1];
+    int step_c = strides[2];
+    image im = make_image(w, h, c);
+    int i, j, k;
+    int index1, index2 = 0;
+
+    for(i = 0; i < h; ++i){
+            for(k= 0; k < c; ++k){
+                for(j = 0; j < w; ++j){
+
+                    index1 = k*w*h + i*w + j;
+                    index2 = step_h*i + step_w*j + step_c*k;
+                    //fprintf(stderr, "w=%d h=%d c=%d step_w=%d step_h=%d step_c=%d \n", w, h, c, step_w, step_h, step_c);
+                    //fprintf(stderr, "im.data[%d]=%u data[%d]=%f \n", index1, src[index2], index2, src[index2]/255.);
+                    im.data[index1] = src[index2]/255.;
+                }
+            }
+        }
+
+    rgbgr_image(im);
+
+    return im;
+}
+#endif
\ No newline at end of file
diff -ur darknet/src/image.h darknet_patched/src/image.h
--- darknet/src/image.h	2019-01-24 10:58:19.248852414 +1000
+++ darknet_patched/src/image.h	2019-01-24 11:04:57.966232653 +1000
@@ -61,6 +61,10 @@
 
 image get_image_layer(image m, int l);
 
+#ifdef NUMPY
+image ndarray_to_image(unsigned char* src, long* shape, long* strides);
+#endif
+
 #ifdef __cplusplus
 }
 #endif
